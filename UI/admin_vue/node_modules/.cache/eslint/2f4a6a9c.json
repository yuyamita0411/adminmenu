[{"/templates/admin_vue/src/main.ts":"1","/templates/admin_vue/src/App.vue":"2","/templates/admin_vue/src/store/common/index.ts":"3","/templates/admin_vue/src/router/index.ts":"4","/templates/admin_vue/src/views/HomeView.vue":"5","/templates/admin_vue/src/views/editMenu.vue":"6","/templates/admin_vue/src/views/articleLists.vue":"7","/templates/admin_vue/src/components/Modal.vue":"8","/templates/admin_vue/src/components/icon/loadingIcon.vue":"9","/templates/admin_vue/src/module/prop.ts":"10","/templates/admin_vue/src/module/function.ts":"11","/templates/admin_vue/src/module/editMenu/index.ts":"12","/templates/admin_vue/src/views/categoryList.vue":"13","/templates/admin_vue/src/views/categoryDetail.vue":"14"},{"size":253,"mtime":1711075247063,"results":"15","hashOfConfig":"16"},{"size":3448,"mtime":1719672782921,"results":"17","hashOfConfig":"16"},{"size":1517,"mtime":1719629193827,"results":"18","hashOfConfig":"16"},{"size":926,"mtime":1719828394120,"results":"19","hashOfConfig":"16"},{"size":154,"mtime":1709880037755,"results":"20","hashOfConfig":"16"},{"size":15450,"mtime":1720104629393,"results":"21","hashOfConfig":"16"},{"size":6264,"mtime":1720102797039,"results":"22","hashOfConfig":"16"},{"size":4516,"mtime":1712792480426,"results":"23","hashOfConfig":"16"},{"size":4485,"mtime":1711587094674,"results":"24","hashOfConfig":"16"},{"size":4699,"mtime":1719590931990,"results":"25","hashOfConfig":"16"},{"size":1543,"mtime":1711641406608,"results":"26","hashOfConfig":"16"},{"size":405,"mtime":1711490426493,"results":"27","hashOfConfig":"16"},{"size":5389,"mtime":1720097368304,"results":"28","hashOfConfig":"16"},{"size":2619,"mtime":1720099967252,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ll0zfj",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},"/templates/admin_vue/src/main.ts",[],"/templates/admin_vue/src/App.vue",[],"/templates/admin_vue/src/store/common/index.ts",[],"/templates/admin_vue/src/router/index.ts",[],"/templates/admin_vue/src/views/HomeView.vue",[],"/templates/admin_vue/src/views/editMenu.vue",[],"/templates/admin_vue/src/views/articleLists.vue",[],"/templates/admin_vue/src/components/Modal.vue",[],"/templates/admin_vue/src/components/icon/loadingIcon.vue",[],"/templates/admin_vue/src/module/prop.ts",[],"/templates/admin_vue/src/module/function.ts",[],"/templates/admin_vue/src/module/editMenu/index.ts",[],"/templates/admin_vue/src/views/categoryList.vue",["60"],"<template>\n    <div class=\"content-wrapper\">\n        <div class=\"mb2rem\">\n            <h2>カテゴリ一覧</h2>\n            <table class=\"list-chart w-100\">\n                <tbody>\n                    <tr v-for=\"(cat, index) in catinfo\" :key=\"cat.category\">\n                        <td class=\"p05rem\">\n                            <router-link :to=\"`${currentPath}/${index}`\" class=\"menu-list-button menuicon\">\n                            {{cat.category}}\n                            </router-link>\n                        </td>\n                        <td class=\"p05rem\"><button type=\"button\" @click=\"deleteData(index)\">\n                            <img\n                            :src=\"trashicon\"\n                            class=\"w2rem h2rem cursor\"\n                            >\n                        </button></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div>\n            <h2>カテゴリー追加</h2>\n            <table class=\"list-chart w-100\">\n                <tbody>\n                    <tr>\n                        <td class=\"font-weight-bold p05rem\">カテゴリ名</td>\n                        <td class=\"p05rem\"><input type=\"text\" class=\"w-100 lh2rem font1rem\" v-model=\"categoryName\" @input=\"editCatInfo('categoryName', $event.target.value)\"></td>\n                    </tr>\n                    <tr>\n                        <td class=\"font-weight-bold p05rem\">ディスクリプション</td>\n                        <td class=\"p05rem\"><input type=\"text\" class=\"w-100 lh2rem font1rem\" v-model=\"categoryDescription\" @input=\"editCatInfo('categoryDescription', $event.target.value)\"></td>\n                    </tr>\n                    <tr>\n                        <td class=\"font-weight-bold p05rem\">og画像</td>\n                        <td class=\"p05rem\"><input type=\"text\" class=\"w-100 lh2rem font1rem\" v-model=\"categoryOgImgPath\" @input=\"editCatInfo('categoryOgImgPath', $event.target.value)\"></td>\n                    </tr>\n                </tbody>\n            </table>\n            <div class=\"flex-container mt2rem font1rem\">\n                <button type=\"button\" @click=\"addCategory\" class=\"submitButton font1rem\">カテゴリを追加する</button>\n                <button type=\"button\" class=\"submitButton font1rem\">カテゴリを翻訳する</button>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { Vue } from \"vue-class-component\";\nimport {store} from '../store/common/index';\nimport { PATH } from '../module/prop';\nimport { GenericObject } from '../module/type';\nimport { API } from '../module/function';\n\nexport default class categoryList extends Vue {\n    path: PATH = new PATH();\n    trashicon = this.path.trashicon;\n    categoryName = '';\n    categoryDescription = '';\n    categoryOgImgPath = '';\n    catdir = '';\n    catinfo: GenericObject = {}\n    currentPath = '';\n\n    created () {\n        this.setCatData();\n        this.readData();\n        this.currentPath = this.$route.path;\n    }\n    setCatData() {\n        this.catdir = `${process.env.VUE_APP_listupPath}${this.$route.path}/index.json`;\n    }\n    readData() {\n        API.post (\n            `${store.state.pageinfo.base_url}${process.env.VUE_APP_categoryDirectory}`,\n            {filePath: this.catdir},\n            (response: GenericObject) => {\n                this.catinfo = response.data;\n                console.log(this.catinfo);\n            }\n        );\n    }\n    addCategory () {\n        if (!this.categoryName || !this.categoryDescription || !this.categoryOgImgPath) {\n            return;\n        }\n\n        let newKey: number;\n        if (Object.keys(this.catinfo).length === 0) {\n            newKey = 1;\n        } else {\n            const keys = Object.keys(this.catinfo).map(key => parseInt(key, 10));\n            newKey = Math.max(...keys) + 1;\n        }\n\n        let today = this.getCurrentDateFormatted();\n        this.catinfo[newKey] = {\n            \"category\": this.categoryName,\n            \"catlist\": [],\n            \"created_at\": today,\n            \"created_at_for_sitemap\": today,\n            \"description\": this.categoryDescription,\n            \"ogImg\": this.categoryOgImgPath,\n            \"updated_at\": today,\n            \"updated_at_for_sitemap\": today\n        };\n\n        API.post (\n            `${store.state.pageinfo.base_url}${process.env.VUE_APP_categoryAddDirectory}`,\n            {filePath: this.catdir, newData: this.catinfo},\n            (response: GenericObject) => {\n                console.log(response);\n            }\n        );\n    }\n\n    editCatInfo(property: string, value: string) {\n      (this as any)[property] = value;\n    }\n\n    deleteData (val: string) {\n        API.post (\n            `${store.state.pageinfo.base_url}${process.env.VUE_APP_categoryDeleteDirectory}`,\n            {filePath: this.catdir, deleteNum: val},\n            (response: GenericObject) => {\n                console.log(response.data);\n                this.catinfo = response.data;\n            }\n        );\n    }\n\n    private getCurrentDateFormatted (): string {\n        const today = new Date();\n        \n        const year = today.getFullYear();\n        const month = String(today.getMonth() + 1).padStart(2, '0');\n        const day = String(today.getDate()).padStart(2, '0');\n        \n        return `${year}-${month}-${day}`;\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n</style>","/templates/admin_vue/src/views/categoryDetail.vue",["61"],"<template>\n    <div class=\"content-wrapper\">\n        <h2>カテゴリ詳細</h2>\n        <table class=\"list-chart w-100\">\n            <thead>\n                <tr>\n                    <th class=\"p05rem\">項目</th>\n                    <th class=\"p05rem\">値</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"(value, key) in catinfo\" :key=\"key\">\n                    <td class=\"p05rem\">{{ key }}</td>\n                    <td class=\"p05rem\">\n                        <input v-model=\"catinfo[key]\" @input=\"updateCat(key, $event.target.value)\" class=\"w-100 lh2rem font1rem\"/>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n        <div class=\"flex-container mt2rem font1rem\">\n            <button @click=\"goBack\" class=\"menu-list-button menuicon submitButton font1rem\">戻る</button>\n            <button type=\"button\" @click=\"rebaseCategory\" class=\"submitButton font1rem\">更新する</button>\n        </div>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { Vue } from \"vue-class-component\";\nimport { store } from '../store/common/index';\nimport { GenericObject } from '../module/type';\nimport { API } from '../module/function';\n\nexport default class categoryDetail extends Vue {\n    categoryName = '';\n    categoryDescription = '';\n    categoryOgImgPath = '';\n    catinfo: GenericObject = {};\n    catdir = '';\n    catnum: any = 0;\n\n    created() {\n        this.setCatData();\n        this.readData();\n    }\n\n    setCatData() {\n        let parts = this.$route.path.split('/');\n        this.catnum = parts.length > 0 ? parts[parts.length - 1] : null;\n        this.catdir = `${process.env.VUE_APP_listupPath}/${parts[1]}/${parts[2]}/index.json`;\n    }\n\n    readData() {\n        API.post(\n            `${store.state.pageinfo.base_url}${process.env.VUE_APP_categoryDetailDirectory}`,\n            { filePath: this.catdir},\n            (response: GenericObject) => {\n                let rawdata = JSON.parse(response.data.data);\n                this.catinfo = rawdata[this.catnum];\n            }\n        );\n    }\n\n    updateCat(key: string, newValue: string) {\n        this.catinfo[key] = newValue;\n    }\n\n    rebaseCategory() {\n        API.post(\n            `${store.state.pageinfo.base_url}${process.env.VUE_APP_categoryDetailRebaseDirectory}`,\n            { filePath: this.catdir, cat_id: this.catnum, rebaseData: this.catinfo },\n            (response: GenericObject) => {\n                console.log(response);\n            }\n        );\n    }\n\n    goBack() {\n        this.$router.go(-1);\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n",{"ruleId":"62","severity":1,"message":"63","line":119,"column":16,"nodeType":"64","messageId":"65","endLine":119,"endColumn":19,"suggestions":"66"},{"ruleId":"62","severity":1,"message":"63","line":39,"column":13,"nodeType":"64","messageId":"65","endLine":39,"endColumn":16,"suggestions":"67"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["68","69"],["70","71"],{"messageId":"72","fix":"73","desc":"74"},{"messageId":"75","fix":"76","desc":"77"},{"messageId":"72","fix":"78","desc":"74"},{"messageId":"75","fix":"79","desc":"77"},"suggestUnknown",{"range":"80","text":"81"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"80","text":"82"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"83","text":"81"},{"range":"83","text":"82"},[4532,4535],"unknown","never",[1373,1376]]