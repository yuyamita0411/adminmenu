[{"/templates/admin_vue/src/main.ts":"1","/templates/admin_vue/src/App.vue":"2","/templates/admin_vue/src/store/index.ts":"3","/templates/admin_vue/src/router/index.ts":"4","/templates/admin_vue/src/views/HomeView.vue":"5","/templates/admin_vue/src/views/editMenu.vue":"6","/templates/admin_vue/src/views/articleLists.vue":"7","/templates/admin_vue/src/components/Modal.vue":"8","/templates/admin_vue/src/module/test.ts":"9","/templates/admin_vue/src/module/function.ts":"10","/templates/admin_vue/src/module/prop.ts":"11"},{"size":246,"mtime":1710987168128,"results":"12","hashOfConfig":"13"},{"size":2841,"mtime":1710991536873,"results":"14","hashOfConfig":"13"},{"size":2873,"mtime":1710991939543,"results":"15","hashOfConfig":"13"},{"size":612,"mtime":1710899695671,"results":"16","hashOfConfig":"13"},{"size":154,"mtime":1709880037755,"results":"17","hashOfConfig":"13"},{"size":14367,"mtime":1710992219756,"results":"18","hashOfConfig":"13"},{"size":1765,"mtime":1710992108554,"results":"19","hashOfConfig":"13"},{"size":3598,"mtime":1710991173822,"results":"20","hashOfConfig":"13"},{"size":7303,"mtime":1710509924626,"results":"21","hashOfConfig":"13"},{"size":2040,"mtime":1710516065454,"results":"22","hashOfConfig":"13"},{"size":2714,"mtime":1710932062379,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ll0zfj",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/templates/admin_vue/src/main.ts",[],"/templates/admin_vue/src/App.vue",[],"/templates/admin_vue/src/store/index.ts",["47"],"import { createStore } from 'vuex';\nimport { StoreState, UpdateStatePayload, GenericObject } from '../module/type';\n\nexport const store = createStore<StoreState>({\n    state: {\n        pageinfo: {},\n        modaldisplaystatus: 'modal-hide',\n        targetTagInfo: {order: 0, setTargetTagNow: '', setTargetTagDetail: ''},\n        modalStatus: {},\n        EditingTargetIndex: {},\n        HoverTargetIndex: {},\n        targetTagNow: \"\",\n        targetTagDetail: \"\",\n        addtag: \"\",\n        nexttagNum: 0,\n        pagedirList:[],\n \n        whichtag: \"\",\n        additemkey: \"\",\n        jsondata: {}\n    },\n    mutations: {\n        setPageInfo(state, payload: { key: number; value: string }) {\n            state.pageinfo[payload.key] = payload.value;\n        },\n        changeModalStatus(state, payload: { key: number; value: string }) {\n            state.modalStatus[payload.key] = payload.value;\n        },\n        updateEditingTargetIndex(state, payload: { key: number; value: boolean }) {\n            state.EditingTargetIndex[payload.key] = payload.value;\n        },\n        updateHoverTargetIndex(state, payload: { key: number; value: boolean }) {\n            state.HoverTargetIndex[payload.key] = payload.value;\n        },\n        updatePagedirList(state, payload: { key: string; value: string }) {\n            state.pagedirList[payload.key] = payload.value;\n        },\n\n        updateState(state, payload: GenericObject) {\n            const { key, value, target } = payload;\n\n            if (target === 'pagedirList' && Array.isArray(state[target])) {\n                // pagedirListのような配列の扱い\n                // keyが配列のインデックスとして機能する場合の処理をここに記述\n                state[target][key] = value;\n            } else if (typeof state[target] === 'object') {\n                // オブジェクトの場合の一般的な扱い\n                state[target][key] = value;\n            } else {\n                console.warn(`Target ${target} is not a valid state property`);\n            }\n        },\n        setJsonData(state, data: GenericObject) {\n            state.jsondata = data;\n        },\n        changeJsonData(state, payload: { key: string; value: string }) {\n            state.jsondata[payload.key] = payload.value;\n        },\n/*\n        setTargetTagNow(state, tag: string) {\n            state.targetTagNow = tag;\n        },\n        setTargetTagDetail(state, tag: string) {\n            state.targetTagDetail = tag;\n        },\n*/\n        setTag(state, tag: string) {\n            state.whichtag = tag;\n        },\n/*\n        setItemKey(state, itemkey: string) {\n            state.additemkey = itemkey;\n        },\n        addValJsonData (state, newVal: string): void {\n            state.jsondata = {\n                ...state.jsondata,\n                [newVal]: ''\n            };\n        }\n*/\n    }\n});\n","/templates/admin_vue/src/router/index.ts",[],"/templates/admin_vue/src/views/HomeView.vue",[],"/templates/admin_vue/src/views/editMenu.vue",[],"/templates/admin_vue/src/views/articleLists.vue",[],"/templates/admin_vue/src/components/Modal.vue",[],"/templates/admin_vue/src/module/test.ts",[],"/templates/admin_vue/src/module/function.ts",[],"/templates/admin_vue/src/module/prop.ts",[],{"ruleId":"48","severity":1,"message":"49","line":2,"column":22,"nodeType":"50","messageId":"51","endLine":2,"endColumn":40},"@typescript-eslint/no-unused-vars","'UpdateStatePayload' is defined but never used.","Identifier","unusedVar"]